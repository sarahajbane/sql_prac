-- Live Sesh 111224 CTEs i.e. temporary tables
-- use cases: 1. data cleaning, 2. combining data from different sources (UNION) 
-- & aggregate data from the combined result,
-- 3. 
--Syntax:  
/*					
          WITH cte_name AS (
					SELECT *
					FROM table1
          WHERE condition)
          SELECT *
          FROM cte_name; 


-- multiple CTEs can be defined, seperated by COMMA
-- Can be used in FROM AND JOIN, but NOT in WHERE
-- even with multiple temporary tables, WITH runs top down

SELECT * FROM customers
WHERE fav_tennis_player LIKE 'Rafa%'

Exercise C

First, use WITH to replace the NULLs in 
the product_id column in order_items with ‘P003’.

Then, show the product name, and revenue 
for product_ids P001-P003 by customer age_group 
in ascending order.

HINT: “Customer_id” in the customers table  
= “user_id” in other tables
*/
/*
WITH cte_name AS (
					SELECT COALESCE (product_id, 'P003')
					FROM order_items)
          SELECT *
          FROM cte_name;
          */
/*

WITH order_items_cleaned as (
	SELECT *,
			CASE WHEN product_id IS NULL THEN 'P003'
			ELSE product_id
			END AS cleaned_product_id
	FROM order_items)
SELECT
			c.age_group,
			p.product_name,
			ROUND(SUM(o.sale_price)::numeric, 2) AS total_revenue 
FROM order_items_cleaned o
JOIN products p on o.cleaned_product_id = p.product_id
JOIN customers c on o.user_id = c.customer_id
WHERE o.cleaned_product_id IN ('P001', 'P002', 'P003')
GROUP BY c.age_group, p.product_name
ORDER BY c.age_group ASC

*/

-- Exercise A

-- Use a WITH statement to standardize all spellings of Rafa.
-- Then, show the revenue generated by his fanbase for vintage items.

WITH customers_cleaned AS (
  SELECT
  CASE WHEN UPPER(fav_tennis_player) LIKE "%AFA&" THEN 'Rafa'
       ELSE UPPER(fav_tennis_player)
       END AS cleaned_fav_player
    FROM customers
),
order_items_vintage_cleaned AS (
    SELECT 
        o.*, 
        CASE 
            WHEN o.product_id IS NULL THEN 'P012'  -- Default placeholder for NULL product IDs
            ELSE o.product_id
        END AS cleaned_product_id
    FROM order_items_vintage o
)

select 
	sum(oiv.sale_price) as total_revenue
from customers_cleaned c 
join order_items_vintage_cleaned oiv on oiv.user_id = c.customer_id
where c.cleaned_fav_player = 'Rafa';

 -- rewrire for myself:
/*
with customers_cleaned AS
(SELECT
 case when fav_tennis_player like '%afa%' then 'Rafa'
   else fav_tennis_player
 end clean_fav_new
 from customers cc
 )
 
 select
 round(sum(sale_price)::numeric, 2) revenue
 from order_items_vintage oiv join cc on oiv.user_id = cc.customer_id
 where cc.fav_new = 'Rafa'
 */
 
 /*
 -- Victoria solution
 WITH rafa_lovers AS (
SELECT *, 
CASE WHEN UPPER(fav_tennis_player) LIKE '%RAF%' THEN 'RAFA'
  ELSE UPPER(fav_tennis_player) END AS players_cleaned
FROM customers
 )
SELECT SUM(sale_price) AS total_revenue
FROM rafa_lovers r
LEFT JOIN orders o
ON o.user_id = r.customer_id
LEFT JOIN order_items_vintage oi
USING (order_id)
WHERE players_cleaned = 'RAFA
*/